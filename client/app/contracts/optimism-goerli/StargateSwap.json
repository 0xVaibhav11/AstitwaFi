{
  "address": "0x5c25Dd7960Ed6e75b6a417d565b047093BE7ed01",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_stargateRouter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        }
      ],
      "name": "ReceivedOnDestination",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountLD",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_payload",
          "type": "bytes"
        }
      ],
      "name": "sgReceive",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stargateRouter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "qty",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "bridgeToken",
          "type": "address"
        },
        {
          "internalType": "uint16",
          "name": "dstChainId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "srcPoolId",
          "type": "uint16"
        },
        {
          "internalType": "uint16",
          "name": "dstPoolId",
          "type": "uint16"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "destStargateComposed",
          "type": "address"
        }
      ],
      "name": "swap",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0x86a8b99a7d6c395bd366770924b26fd3938e889743408e4acbba3a37bbc35b7e",
  "receipt": {
    "to": null,
    "from": "0xe159251810d23623a64Adb495648e44730bdfA27",
    "contractAddress": "0x5c25Dd7960Ed6e75b6a417d565b047093BE7ed01",
    "transactionIndex": 1,
    "gasUsed": "723221",
    "logsBloom": "0x
    "blockHash": "0xa9c918a2d1bed52736877c6664e4a25a519c63b5835e1739ff5ffe5f7a5e8b51",
    "transactionHash": "0x86a8b99a7d6c395bd366770924b26fd3938e889743408e4acbba3a37bbc35b7e",
    "logs": [],
    "blockNumber": 13175463,
    "cumulativeGasUsed": "770098",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x95461eF0e0ecabC049a5c4a6B98Ca7B335FAF068"
  ],
  "numDeployments": 1,
  "solcInputHash": "a8d22935701bf67a8016d8f6fb8fa06d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stargateRouter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"}],\"name\":\"ReceivedOnDestination\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountLD\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_payload\",\"type\":\"bytes\"}],\"name\":\"sgReceive\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stargateRouter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"qty\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"bridgeToken\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"dstChainId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"srcPoolId\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"dstPoolId\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destStargateComposed\",\"type\":\"address\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/stargate/StargateSwap.sol\":\"StargateSwap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\\n}\\n\",\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/extensions/IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    /**\\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\\n     */\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    /**\\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 oldAllowance = token.allowance(address(this), spender);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance + value));\\n    }\\n\\n    /**\\n     * @dev Decrease the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful.\\n     */\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, oldAllowance - value));\\n        }\\n    }\\n\\n    /**\\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\\n     * non-reverting calls are assumed to be successful. Compatible with tokens that require the approval to be set to\\n     * 0 before setting it to a non-zero value.\\n     */\\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\\n        bytes memory approvalCall = abi.encodeWithSelector(token.approve.selector, spender, value);\\n\\n        if (!_callOptionalReturnBool(token, approvalCall)) {\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, 0));\\n            _callOptionalReturn(token, approvalCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Use a ERC-2612 signature to set the `owner` approval toward `spender` on `token`.\\n     * Revert on invalid signature.\\n     */\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        require(returndata.length == 0 || abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     *\\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\\n     */\\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\\n        // and not revert is the subcall reverts.\\n\\n        (bool success, bytes memory returndata) = address(token).call(data);\\n        return\\n            success && (returndata.length == 0 || abi.decode(returndata, (bool))) && Address.isContract(address(token));\\n    }\\n}\\n\",\"keccak256\":\"0x909d608c2db6eb165ca178c81289a07ed2e118e444d0025b2a85c97d0b44a4fa\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     *\\n     * Furthermore, `isContract` will also return true if the target contract within\\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\\n     * which only has an effect at the end of a transaction.\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateReceiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\n\\r\\ninterface IStargateReceiver {\\r\\n    function sgReceive(\\r\\n        uint16 _chainId,\\r\\n        bytes memory _srcAddress,\\r\\n        uint256 _nonce,\\r\\n        address _token,\\r\\n        uint256 amountLD,\\r\\n        bytes memory payload\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x66ab277600910d0652089f417758a9ae48ea2fbd1204110e71158cb6b6eaca3a\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateRouter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\npragma abicoder v2;\\r\\n\\r\\ninterface IStargateRouter {\\r\\n    struct lzTxObj {\\r\\n        uint256 dstGasForCall;\\r\\n        uint256 dstNativeAmount;\\r\\n        bytes dstNativeAddr;\\r\\n    }\\r\\n\\r\\n    function addLiquidity(\\r\\n        uint256 _poolId,\\r\\n        uint256 _amountLD,\\r\\n        address _to\\r\\n    ) external;\\r\\n\\r\\n    function swap(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress,\\r\\n        uint256 _amountLD,\\r\\n        uint256 _minAmountLD,\\r\\n        lzTxObj memory _lzTxParams,\\r\\n        bytes calldata _to,\\r\\n        bytes calldata _payload\\r\\n    ) external payable;\\r\\n\\r\\n    function redeemRemote(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress,\\r\\n        uint256 _amountLP,\\r\\n        uint256 _minAmountLD,\\r\\n        bytes calldata _to,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable;\\r\\n\\r\\n    function instantRedeemLocal(\\r\\n        uint16 _srcPoolId,\\r\\n        uint256 _amountLP,\\r\\n        address _to\\r\\n    ) external returns (uint256);\\r\\n\\r\\n    function redeemLocal(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress,\\r\\n        uint256 _amountLP,\\r\\n        bytes calldata _to,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external payable;\\r\\n\\r\\n    function sendCredits(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _srcPoolId,\\r\\n        uint256 _dstPoolId,\\r\\n        address payable _refundAddress\\r\\n    ) external payable;\\r\\n\\r\\n    function quoteLayerZeroFee(\\r\\n        uint16 _dstChainId,\\r\\n        uint8 _functionType,\\r\\n        bytes calldata _toAddress,\\r\\n        bytes calldata _transferAndCallPayload,\\r\\n        lzTxObj memory _lzTxParams\\r\\n    ) external view returns (uint256, uint256);\\r\\n}\\r\\n\",\"keccak256\":\"0xb6f603e7c9ac73a94b7e9964768b7cae3ffd153d148688a548c4678008d14e97\",\"license\":\"MIT\"},\"contracts/interfaces/IStargateWidget.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\npragma abicoder v2;\\r\\n\\r\\nimport \\\"../interfaces/IStargateRouter.sol\\\";\\r\\n\\r\\ninterface IStargateWidget {\\r\\n    struct FeeObj {\\r\\n        uint256 tenthBps; // bps is to an extra decimal place\\r\\n        address feeCollector;\\r\\n    }\\r\\n\\r\\n    event WidgetSwapped(bytes2 indexed partnerId, uint256 tenthBps, uint256 widgetFee);\\r\\n    event PartnerSwap(bytes2 indexed partnerId);\\r\\n\\r\\n    function partnerSwap(bytes2 _partnerId) external;\\r\\n\\r\\n    function swapTokens(\\r\\n        uint16 _dstChainId,\\r\\n        uint16 _srcPoolId,\\r\\n        uint16 _dstPoolId,\\r\\n        uint256 _amountLD,\\r\\n        uint256 _minAmountLD,\\r\\n        IStargateRouter.lzTxObj calldata _lzTxParams,\\r\\n        bytes calldata _to,\\r\\n        bytes2 _partnerId,\\r\\n        FeeObj calldata _feeObj\\r\\n    ) external payable;\\r\\n\\r\\n\\r\\n    function swapETH(\\r\\n        uint16 _dstChainId,\\r\\n        uint256 _amountLD,\\r\\n        uint256 _minAmountLD,\\r\\n        bytes calldata _to,\\r\\n        bytes2 _partnerId,\\r\\n        FeeObj calldata _feeObj\\r\\n    ) external payable;\\r\\n}\\r\\n\",\"keccak256\":\"0xa55b00ff4ff32f9a0daff7cb7d314806b2348f11f48804346791f58b7d56fcdc\",\"license\":\"MIT\"},\"contracts/stargate/StargateSwap.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.4;\\r\\npragma abicoder v2;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"../interfaces/IStargateRouter.sol\\\";\\r\\nimport \\\"../interfaces/IStargateReceiver.sol\\\";\\r\\nimport \\\"../interfaces/IStargateWidget.sol\\\";\\r\\n\\r\\n\\r\\ncontract StargateSwap is IStargateReceiver {\\r\\n    using SafeERC20 for IERC20;\\r\\n\\r\\n    address public stargateRouter;      // an IStargateRouter instance\\r\\n\\r\\n    event ReceivedOnDestination(address token, uint qty);\\r\\n\\r\\n    constructor(address _stargateRouter) {\\r\\n        stargateRouter = _stargateRouter;\\r\\n        \\r\\n    }\\r\\n\\r\\n    \\r\\n    // swap tokens to another chain\\r\\n    function swap(\\r\\n        uint qty,\\r\\n        address bridgeToken,                    // the address of the native ERC20 to swap() - *must* be the token for the poolId\\r\\n        uint16 dstChainId,                      // Stargate/LayerZero chainId\\r\\n        uint16 srcPoolId,                       // stargate poolId - *must* be the poolId for the qty asset\\r\\n        uint16 dstPoolId,                       // stargate destination poolId\\r\\n        address to,                             // the address to send the destination tokens to\\r\\n        address destStargateComposed            // destination contract. it must implement sgReceive()\\r\\n    ) external payable {\\r\\n        require(msg.value > 0, \\\"stargate requires a msg.value to pay crosschain message\\\");\\r\\n        require(qty > 0, 'error: swap() requires qty > 0');\\r\\n\\r\\n        // encode payload data to send to destination contract, which it will handle with sgReceive()\\r\\n        bytes memory data = abi.encode(to);\\r\\n\\r\\n        // this contract calls stargate swap()\\r\\n        IERC20(bridgeToken).safeTransferFrom(msg.sender, address(this), qty);\\r\\n        IERC20(bridgeToken).safeApprove(address(stargateRouter), qty);\\r\\n\\r\\n        // Stargate's Router.swap() function sends the tokens to the destination chain.\\r\\n        IStargateRouter(stargateRouter).swap{value:msg.value}(\\r\\n            dstChainId,                                     // the destination chain id\\r\\n            srcPoolId,                                      // the source Stargate poolId\\r\\n            dstPoolId,                                      // the destination Stargate poolId\\r\\n            payable(msg.sender),                            // refund adddress. if msg.sender pays too much gas, return extra eth\\r\\n            qty,                                            // total tokens to send to destination chain\\r\\n            0,                                              // min amount allowed out\\r\\n            IStargateRouter.lzTxObj(200000, 0, \\\"0x\\\"),       // default lzTxObj\\r\\n            abi.encodePacked(destStargateComposed),         // destination address, the sgReceive() implementer\\r\\n            data                                            // bytes payload\\r\\n        );\\r\\n\\r\\n        \\r\\n    }\\r\\n\\r\\n    //-----------------------------------------------------------------------------------------------------------------------\\r\\n    // sgReceive() - the destination contract must implement this function to receive the tokens and payload\\r\\n    function sgReceive(uint16 /*_chainId*/, bytes memory /*_srcAddress*/, uint /*_nonce*/, address _token, uint amountLD, bytes memory _payload) override external {\\r\\n        require(msg.sender == address(stargateRouter), \\\"only stargate router can call sgReceive!\\\");\\r\\n        (address _toAddr) = abi.decode(_payload, (address));\\r\\n        // send transfer _token/amountLD to _toAddr\\r\\n        IERC20(_token).transfer(_toAddr, amountLD);\\r\\n        emit ReceivedOnDestination(_token, amountLD);\\r\\n    }\\r\\n\\r\\n}\",\"keccak256\":\"0xee7008d1cd3305b99291661ce081a80c61cb4ffb973f3978f4d3a30613562534\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c41380380610c4183398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610bae806100936000396000f3fe6080604052600436106100345760003560e01c8063a9e56f3c14610039578063ab8236f314610075578063b13bf31514610097575b600080fd5b34801561004557600080fd5b50600054610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b34801561008157600080fd5b506100956100903660046108cc565b6100aa565b005b6100956100a5366004610967565b6101f3565b6000546001600160a01b0316331461011a5760405162461bcd60e51b815260206004820152602860248201527f6f6e6c7920737461726761746520726f757465722063616e2063616c6c207367604482015267526563656976652160c01b60648201526084015b60405180910390fd5b60008180602001905181019061013091906109ee565b60405163a9059cbb60e01b81526001600160a01b038083166004830152602482018690529192509085169063a9059cbb906044016020604051808303816000875af1158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a79190610a12565b50604080516001600160a01b0386168152602081018590527f9055ece9d44a86bda76b7ffbee0015dcdd504bd121fe9d4afd5300275ee817be910160405180910390a150505050505050565b600034116102695760405162461bcd60e51b815260206004820152603760248201527f73746172676174652072657175697265732061206d73672e76616c756520746f60448201527f207061792063726f7373636861696e206d6573736167650000000000000000006064820152608401610111565b600087116102b95760405162461bcd60e51b815260206004820152601e60248201527f6572726f723a2073776170282920726571756972657320717479203e203000006044820152606401610111565b604080516001600160a01b03841660208201526000910160408051601f1981840301815291905290506102f76001600160a01b03881633308b61040d565b600054610311906001600160a01b0389811691168a61047e565b60008054906101000a90046001600160a01b03166001600160a01b0316639fbf10fc34888888338e6000604051806060016040528062030d4081526020016000815260200160405180604001604052806002815260200161060f60f31b8152508152508b60405160200161039d919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528b6040518b63ffffffff1660e01b81526004016103d199989796959493929190610a8c565b6000604051808303818588803b1580156103ea57600080fd5b505af11580156103fe573d6000803e3d6000fd5b50505050505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526104789085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610598565b50505050565b8015806104f85750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190610b30565b155b6105635760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610111565b6040516001600160a01b03831660248201526044810182905261059390849063095ea7b360e01b90606401610441565b505050565b60006105ed826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661066d9092919063ffffffff16565b905080516000148061060e57508080602001905181019061060e9190610a12565b6105935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610111565b606061067c8484600085610684565b949350505050565b6060824710156106e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610111565b600080866001600160a01b031685876040516107019190610b49565b60006040518083038185875af1925050503d806000811461073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b50915091506107548783838761075f565b979650505050505050565b606083156107cb5782516107c4576001600160a01b0385163b6107c45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610111565b508161067c565b61067c83838151156107e05781518083602001fd5b8060405162461bcd60e51b81526004016101119190610b65565b803561ffff8116811461080c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261083857600080fd5b813567ffffffffffffffff8082111561085357610853610811565b604051601f8301601f19908116603f0116810190828211818310171561087b5761087b610811565b8160405283815286602085880101111561089457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b03811681146108c957600080fd5b50565b60008060008060008060c087890312156108e557600080fd5b6108ee876107fa565b9550602087013567ffffffffffffffff8082111561090b57600080fd5b6109178a838b01610827565b96506040890135955060608901359150610930826108b4565b9093506080880135925060a0880135908082111561094d57600080fd5b5061095a89828a01610827565b9150509295509295509295565b600080600080600080600060e0888a03121561098257600080fd5b873596506020880135610994816108b4565b95506109a2604089016107fa565b94506109b0606089016107fa565b93506109be608089016107fa565b925060a08801356109ce816108b4565b915060c08801356109de816108b4565b8091505092959891949750929550565b600060208284031215610a0057600080fd5b8151610a0b816108b4565b9392505050565b600060208284031215610a2457600080fd5b81518015158114610a0b57600080fd5b60005b83811015610a4f578181015183820152602001610a37565b838111156104785750506000910152565b60008151808452610a78816020860160208601610a34565b601f01601f19169290920160200192915050565b600061012061ffff808d168452808c166020850152808b1660408501525060018060a01b03891660608401528760808401528660a08401528060c084015285518184015250602085015161014083015260408501516060610160840152610af7610180840182610a60565b905082810360e0840152610b0b8186610a60565b9050828103610100840152610b208185610a60565b9c9b505050505050505050505050565b600060208284031215610b4257600080fd5b5051919050565b60008251610b5b818460208701610a34565b9190910192915050565b602081526000610a0b6020830184610a6056fea26469706673582212200e644bc2f8cb95a64d981ddc97752ce4aef6cc1df6b02c8992ec9377ff7d440e64736f6c634300080c0033",
  "deployedBytecode": "0x6080604052600436106100345760003560e01c8063a9e56f3c14610039578063ab8236f314610075578063b13bf31514610097575b600080fd5b34801561004557600080fd5b50600054610059906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b34801561008157600080fd5b506100956100903660046108cc565b6100aa565b005b6100956100a5366004610967565b6101f3565b6000546001600160a01b0316331461011a5760405162461bcd60e51b815260206004820152602860248201527f6f6e6c7920737461726761746520726f757465722063616e2063616c6c207367604482015267526563656976652160c01b60648201526084015b60405180910390fd5b60008180602001905181019061013091906109ee565b60405163a9059cbb60e01b81526001600160a01b038083166004830152602482018690529192509085169063a9059cbb906044016020604051808303816000875af1158015610183573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a79190610a12565b50604080516001600160a01b0386168152602081018590527f9055ece9d44a86bda76b7ffbee0015dcdd504bd121fe9d4afd5300275ee817be910160405180910390a150505050505050565b600034116102695760405162461bcd60e51b815260206004820152603760248201527f73746172676174652072657175697265732061206d73672e76616c756520746f60448201527f207061792063726f7373636861696e206d6573736167650000000000000000006064820152608401610111565b600087116102b95760405162461bcd60e51b815260206004820152601e60248201527f6572726f723a2073776170282920726571756972657320717479203e203000006044820152606401610111565b604080516001600160a01b03841660208201526000910160408051601f1981840301815291905290506102f76001600160a01b03881633308b61040d565b600054610311906001600160a01b0389811691168a61047e565b60008054906101000a90046001600160a01b03166001600160a01b0316639fbf10fc34888888338e6000604051806060016040528062030d4081526020016000815260200160405180604001604052806002815260200161060f60f31b8152508152508b60405160200161039d919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040528b6040518b63ffffffff1660e01b81526004016103d199989796959493929190610a8c565b6000604051808303818588803b1580156103ea57600080fd5b505af11580156103fe573d6000803e3d6000fd5b50505050505050505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526104789085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610598565b50505050565b8015806104f85750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e90604401602060405180830381865afa1580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190610b30565b155b6105635760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b6064820152608401610111565b6040516001600160a01b03831660248201526044810182905261059390849063095ea7b360e01b90606401610441565b505050565b60006105ed826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661066d9092919063ffffffff16565b905080516000148061060e57508080602001905181019061060e9190610a12565b6105935760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610111565b606061067c8484600085610684565b949350505050565b6060824710156106e55760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610111565b600080866001600160a01b031685876040516107019190610b49565b60006040518083038185875af1925050503d806000811461073e576040519150601f19603f3d011682016040523d82523d6000602084013e610743565b606091505b50915091506107548783838761075f565b979650505050505050565b606083156107cb5782516107c4576001600160a01b0385163b6107c45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610111565b508161067c565b61067c83838151156107e05781518083602001fd5b8060405162461bcd60e51b81526004016101119190610b65565b803561ffff8116811461080c57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261083857600080fd5b813567ffffffffffffffff8082111561085357610853610811565b604051601f8301601f19908116603f0116810190828211818310171561087b5761087b610811565b8160405283815286602085880101111561089457600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b03811681146108c957600080fd5b50565b60008060008060008060c087890312156108e557600080fd5b6108ee876107fa565b9550602087013567ffffffffffffffff8082111561090b57600080fd5b6109178a838b01610827565b96506040890135955060608901359150610930826108b4565b9093506080880135925060a0880135908082111561094d57600080fd5b5061095a89828a01610827565b9150509295509295509295565b600080600080600080600060e0888a03121561098257600080fd5b873596506020880135610994816108b4565b95506109a2604089016107fa565b94506109b0606089016107fa565b93506109be608089016107fa565b925060a08801356109ce816108b4565b915060c08801356109de816108b4565b8091505092959891949750929550565b600060208284031215610a0057600080fd5b8151610a0b816108b4565b9392505050565b600060208284031215610a2457600080fd5b81518015158114610a0b57600080fd5b60005b83811015610a4f578181015183820152602001610a37565b838111156104785750506000910152565b60008151808452610a78816020860160208601610a34565b601f01601f19169290920160200192915050565b600061012061ffff808d168452808c166020850152808b1660408501525060018060a01b03891660608401528760808401528660a08401528060c084015285518184015250602085015161014083015260408501516060610160840152610af7610180840182610a60565b905082810360e0840152610b0b8186610a60565b9050828103610100840152610b208185610a60565b9c9b505050505050505050505050565b600060208284031215610b4257600080fd5b5051919050565b60008251610b5b818460208701610a34565b9190910192915050565b602081526000610a0b6020830184610a6056fea26469706673582212200e644bc2f8cb95a64d981ddc97752ce4aef6cc1df6b02c8992ec9377ff7d440e64736f6c634300080c0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 18905,
        "contract": "contracts/stargate/StargateSwap.sol:StargateSwap",
        "label": "stargateRouter",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  }
}